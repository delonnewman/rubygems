= <nowiki>RubyGems</nowiki> User Documentation =

== Installing the <nowiki>RubyGems</nowiki> package ==
Installation is fairly simple.
* [http://rubyforge.org/project/showfiles.php?group_id=126 Download] <nowiki>RubyGems</nowiki>
* Unpack the distribution (zip or tar.gz)
* cd rubygems-version.number
* ruby install.rb (NOTE:  You'll need to have write access to your Ruby site_library directory).

At this time, the contents of the "bin" directory are not installed.  You'll have to manually 
copy these files to somewhere in your path.

If you have a non-standard Ruby installation and would like to install <nowiki>RubyGems</nowiki> 
to an alternate location, you can recursively copy the contents of "lib" to the desired location 
and add this location to ruby's LOAD_PATH.

== Installing and Uninstalling Gems ==
=== Installing ===
The easiest way to install a Gem is to actually run the gem itself.  Each Ruby Gem is a valid 
Ruby script which, when executed, will extract and install itself.  The command is, simply:

  ruby myproject-0.0.1.gem [--help | --dir=<dirname> | --force]

By default, <nowiki>RubyGems</nowiki> maintains installed content in a central directory 
located off of the root of your Ruby installation.  The <b>--dirname</b> command-line option 
allows you to change this default installation location, which would be useful, for example, 
if you were on a computer for which you lacked write access to the standard Ruby distribution.

The <b>--force</b> option disables dependency checking.  By default, <nowiki>RubyGems</nowiki> 
will fail to install a Gem if the required dependencies are not already present in your Gem 
directory.

Alternatively, you can use the <b>gem</b> command with these same plus the <b>--install</b> option:

  gem --install myproject-0.0.1.gem [--dir=<dirname> | --force]

=== Uninstalling ===

To uninstall a gem, you can simply run the following command:

  gem --uninstall myproject [--version=<versionnumber>]

If run without the version number, and only one match for the gem name is found, that gem will 
be uninstalled.  If multiple matches are found, the uninstaller will display a list of installed 
versions of the specified Gem and ask you to select the one to uninstall.  When the 
<b>--version</b> option is used, only the specified version will be removed, or an error will 
be displayed if it is not found.

== Creating Gems ==	
See DevDoc
== Remote Installation ==
<nowiki>RubyGems</nowiki> supports installation of packages via a network.  The 
<nowiki>RubyGems</nowiki> distribution comes with a default set of package "sources", 
which are installed as a Ruby Gem during the <b>install.rb</b> process outlined above.  
<nowiki>RubyGems</nowiki> uses HTTP for both discovery and download of gem files.

Remote installation of a gem can be performed as follows:

  gem --remote-install <gemname> [--version=<gemversion>]

This command will download the requested gem and all of its dependencies (recursively) 
and install them.  

Under normal operating conditions, you will not need to worry about the gem "sources", since 
it's managed internally to the <nowiki>RubyGems</nowiki> distribution and upgradable as a gem 
itself.  However, if you <b>do</b> need to override or append to your sources list, that can 
be accomplished as in the following:

   FIXME: This isn't possible yet.
== Navigating the Gem Database ==