#!/usr/bin/env ruby

require 'optparse'

options = {}
ARGV.options do |opts|
  opts.on_tail("--help", "show this message") {puts opts; exit}
  opts.on('-bGEMSPEC','--build=GEMSPEC', "Build a gem file from spec") { |options[:gemspec]| }
  opts.on('-iGEMFILE', '--install=GEMFILE', "Install a gem from local gem file")    {|options[:install]|}
  opts.on('-uGEMNAME', '--uninstall=GEMNAME', "Uninstall a previously installed gem") {|options[:uninstall]|}
  opts.on('--info=GEMNAME', "Display details about an installed Gem") {|options[:info]|}
  opts.on('--dir=DIRNAME', "Installation directory for the Gem") {|options[:directory]|}
  opts.on('--list', "List installed Gems") {|options[:list]|}
  opts.on('--force', "Force Gem to intall, bypassing dependency checks") {|options[:force]|}
  opts.on('--remote-install=GEMNAME', "Auto-download and install a Gem and its dependencies") {|options[:remote_install]|}
  opts.on('--version=GEMVERSION', "Version of Gem to perform operation on") {|options[:gem_version]|}
  opts.parse!
end

require 'rubygems'
@spec_file = options[:build]
@install_file = options[:install]
@gem = options[:uninstall]
@info = options[:info]
@list = options[:list]
@force = options[:force]
@remote_install = options[:remote_install]
@directory = options[:directory] || Gem.dir

if @spec_file
  load @spec_file
  Gem::Specification.list.each do |spec|
    Gem::Builder.new(spec).build
  end
end

if @install_file
  unless File.exist?(@install_file)
    if File.exist?(@install_file+".gem")
      @install_file = @install_file+".gem"
    else
      puts "Unknown gem file #{@install_file}"
    end
  end
  installer = Gem::Installer.new(@install_file)
  installer.install(@force, @directory)
end

if @gem
  Gem::Uninstaller.new(@gem).uninstall
end

if @info
  gem_spec = Gem::Cache.from_installed_gems.search_by_name(@info)
  if gem_spec
    require 'yaml'
    puts gem_spec.to_yaml
  else
    puts "Unkown gem #{@info}"
  end
end

if @list
  Gem::Cache.from_installed_gems.each do |gem_name, gem_spec|
    puts gem_name
  end
end

if @remote_install
  Gem::RemoteInstaller.new(@remote_install, options[:gem_version] || "> 0.0.0").install
end
