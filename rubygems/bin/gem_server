#!/usr/bin/env ruby

##
# gem_server and gem_server.cgi are equivalent programs that allow  
# users to serve gems for consumption by `gem --remote-install`.
# 
# gem_server starts an HTTP server on the given port, and serves the folowing:
# * "/" - Browsing of gem spec files for installed gems
# * "/yaml" - Full yaml dump of metadata for installed gems
# * "/gems" - Direct access to download the installable gems
#
# Usage: gem_server [-p portnum] [-d gem_path]
# port_num:: The TCP port the HTTP server will bind to
# gem_path:: Root gem directory containing both "cache" and "specifications"
#   subdirectories.
if __FILE__ == $0
  require 'webrick'
  require 'yaml'
  require 'rubygems'
  require 'optparse'
  options = {}
  ARGV.options do |opts|
    opts.on_tail("--help", 
      "show this message") {puts opts; exit}
    opts.on('-pPORT','--port=PORT', 
      "Specify the port to listen on") { |options[:port]| }
    opts.on('-dGEMDIR','--dir=GEMDIR', 
      "Specify the directory from which to serve Gems") { |options[:gemdir]| }
    opts.parse!
  end

  s = WEBrick::HTTPServer.new(:Port => options[:port] || 8808)
  s.mount_proc("/yaml") do |req, res|
    res['content-type'] = 'text/plain'
    res.body << Gem::Cache.from_installed_gems(File.join(options[:gemdir] || Gem.dir, "specifications")).to_yaml
  end
  s.mount_proc("/doc") do |req, res|
    table = "<tr><td align='center'><h3>Gem Name</h3></td><td align='center'><h3>Description</h3></td><td align='center'><h3>Documentation</h3></td></tr>"
    Gem::Cache.from_installed_gems(File.join(options[:gemdir] || Gem.dir, "specifications")).each do |path, spec|
      table += "<tr><td>#{spec.full_name}</td><td>"
      table += spec.summary
      table +="</td><td>"
      if Gem::DocManager.new(spec).rdoc_installed?
        table += "<a href='#{'/doc_root/'+spec.full_name+'/rdoc/index.html'}'>RDoc Index</a>"
      else
        table +="None installed"
      end
      table += "</td>"
    end
    res['content-type'] = 'text/html'
    res.body = <<-WEBPAGE
      <HTML>
      <BODY>
      <CENTER>
      <h1>RubyGems Documentation Index</h1>
      <br>
      <table border=2>
      #{table}
      </table>
      </html>
    WEBPAGE
  end
  {"/" => "/specifications/", "/gems" => "/cache/", "/doc_root" => "/doc/"}.each do |mount_point, mount_dir|
    s.mount(mount_point, WEBrick::HTTPServlet::FileHandler, File.join(options[:gemdir] || Gem.dir, mount_dir), true)
  end
  trap("INT"){ s.shutdown }
  s.start
end
